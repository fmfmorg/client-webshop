---
import TextInput from "@components/input-fields/text-input";
import SubmitBtn from "./submit-btn.astro";

---
<form id="form-password">
    <TextInput
        type="password"
        placeholder='Current Password'
        id="current-password"
        name="current-password"
        className='my-4'
        required
        client:only="solid-js"
        maxLength={50}
    />
    <TextInput
        type="password"
        placeholder='New Password'
        id="new-password"
        name="new-password"
        className='my-4'
        showPasswordRules
        required
        pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!?<>\\/\\@#$%\\^&\\*\\(\\)~\\=\\-_\\+\\.,])[a-zA-Z0-9!?<>\\/\\@#$%\\^&\\*\\(\\)~\\=\\-_\\+\\.,]{8,20}$"
        client:only="solid-js"
    />
    <div class="error-msg -mt-2 font-light tracking-wider mb-4 text-red-700 hidden" />
    <SubmitBtn />
</form>

<script>
import { dispatchInternalEvent, httpRequestHeader, sessionLost } from "@misc"
import { TEXT_INPUT_SET_NEW_VALUE } from "@misc/event-keys"

    const form = document.getElementById('form-password') as HTMLFormElement
    const errorMsgElem = form.getElementsByClassName('error-msg')[0] as HTMLDivElement

    const clearPassword = (e:HTMLInputElement) => dispatchInternalEvent(TEXT_INPUT_SET_NEW_VALUE,{id:e.id,value:''})

    const onSubmit = async (e:SubmitEvent) => {
        e.preventDefault()

        const currentPasswordElem = form.elements.namedItem('current-password') as HTMLInputElement
        const newPasswordElem = form.elements.namedItem('new-password') as HTMLInputElement
        const currentPassword = currentPasswordElem.value.trim()
        const newPassword = newPasswordElem.value.trim()

        clearPassword(currentPasswordElem)
        clearPassword(newPasswordElem)

        const resp = await fetch('/api/webshop/account-profile-update-password',{
            method:"POST",
            headers:httpRequestHeader(false,'client',false),
            body:JSON.stringify({currentPassword,newPassword})
        })
        const { status, ok } = resp

        if (ok) window.location.reload()
        else switch (status) {
            case 400:
                const text = await resp.text()
                errorMsgElem.innerText = text
                errorMsgElem.classList.remove('hidden')
                break
            case 401:
                window.location.assign(`/sign-in?rd=${encodeURIComponent(window.location.pathname)}`)
                break
            case 403:
                await sessionLost(resp.status)
                break
            default:
                errorMsgElem.innerText = 'System error. Please try again later.'
                errorMsgElem.classList.remove('hidden')
                break
        }
    }

    form.addEventListener('submit',onSubmit,true)
</script>