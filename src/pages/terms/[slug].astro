---
import Layout from '@components/layout/index.astro'
import { FM_CLIENT_WEBSHOP_API_URL } from 'astro:env/server'
import { httpRequestHeader, sessionCookieOption, type IMdwResponse, type IShoppingBagSidebarProp } from '@misc'
import { FM_IS_ONLINE, PUBLIC_FM_COMPANY_NAME_SHORT, PUBLIC_FM_HEADER_CAROUSEL_OFF_COOKIE_KEY } from 'astro:env/client'
import Terms from '@components/terms/index.astro'

let { slug } = Astro.params;

const slugs = [
    'terms-and-conditions',
    'delivery',
    'returns-refunds'
]

if (slugs.indexOf(slug) === -1) return new Response(null,{status:404})

const isOnline = FM_IS_ONLINE === 'true'
const initialSessionID = Astro.cookies.get("sessionID")?.value || ""
const headerCarouselOff = Astro.cookies.has(PUBLIC_FM_HEADER_CAROUSEL_OFF_COOKIE_KEY)

const resp = await fetch(`${ FM_CLIENT_WEBSHOP_API_URL }/webshop/static-text/${slug}`,{
    headers:httpRequestHeader(true,'SSR',true,initialSessionID,Astro.clientAddress,!headerCarouselOff)
})

if (!resp.ok) return new Response(null,{status:500})

const json = await resp.json()
const {mdwResponse,apiResponse:{text}} = json as {mdwResponse: IMdwResponse; apiResponse:{text}}
const {
    expiresAt,
    sessionID,
    signedIn,
    cartProductDetailsMap,
    cartItemMap,
    cartContent,
    paymentInProcess,
    selCollectionPoint,
    prfCollectionPoint,
    shopAddressMap,
    minSpendForFreeShipping,
    firstName,
    headerCarouselTexts,
    collectionMenuMap,
} = mdwResponse

Astro.cookies.set('sessionID',sessionID,sessionCookieOption(isOnline,expiresAt))

const shoppingBagProp:IShoppingBagSidebarProp = {
    isSignedIn:signedIn,
    cartContent,
    freeShippingLimit:minSpendForFreeShipping,
    cartItemMap,
    productDetailsMap:cartProductDetailsMap
}

Astro.cookies.set("csrf_token",resp.headers.get("X-CSRF-TOKEN"),sessionCookieOption(isOnline))

let title = '', metaDescription = '', schema = ''

switch (slug) {
    case 'terms-and-conditions':
        title = 'Terms and Conditions'
        metaDescription = 'Read our terms and conditions for purchasing jewellery from our online store. Clear information about your rights, our policies, and service agreements.'
        break
    case 'delivery':
        title = 'Delivery'
        metaDescription = 'Find out about our delivery options and shipping costs. Free UK shipping available on orders over Â£20.'
        schema = JSON.stringify({
            "@context": "https://schema.org",
            "@graph":[
                {
                "@type": "ShippingRateSettings",
                "name": "Royal Mail Tracked 48",
                "shippingLabel": "Royal Mail Tracked 48",
                "shippingRate": {
                    "@type": "MonetaryAmount",
                    "value": "4.00",
                    "currency": "GBP"
                },
                "freeShippingThreshold": {
                    "@type": "MonetaryAmount",
                    "value": "20.00",
                    "currency": "GBP"
                },
                "shippingDestination": {
                    "@type": "DefinedRegion",
                    "addressCountry": "GB"
                }
                },
                {
                "@type": "ShippingRateSettings",
                "name": "Royal Mail Tracked 24",
                "shippingLabel": "Royal Mail Tracked 24",
                "shippingRate": {
                    "@type": "MonetaryAmount",
                    "value": "5.00",
                    "currency": "GBP"
                },
                "shippingDestination": {
                    "@type": "DefinedRegion",
                    "addressCountry": "GB"
                }
                }
            ]
        })
        break
    case 'returns-refunds':
        title = 'Returns and Refunds'
        metaDescription = 'Information about our returns and refunds policy for fashion jewellery. View our guidelines and procedures.'
        break
}
---

<Layout {...{
    shoppingBagProp,
    paymentInProcess,
    selCollectionPoint,
    prfCollectionPoint,
    shopAddressMap,
    signedIn,
    firstName,
    title:`${title} | ${PUBLIC_FM_COMPANY_NAME_SHORT}`,
    headerCarouselTexts,
    metaDescription,
    schema,
    collectionMenuMap,
}}>
    <Terms {...{text}} />
</Layout>