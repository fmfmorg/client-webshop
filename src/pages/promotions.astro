---
import Layout from '@components/layout/index.astro'
import { FM_IS_ONLINE, FM_CLIENT_WEBSHOP_API_URL } from 'astro:env/server'
import { PUBLIC_FM_HEADER_CAROUSEL_OFF_COOKIE_KEY } from 'astro:env/client'
import { httpRequestHeader, sessionCookieOption, type IMdwResponse, type IShoppingBagSidebarProp } from '@misc'
import Promotion from '@components/promotions/index.astro'

const isOnline = FM_IS_ONLINE === 'true'
const initialSessionID = Astro.cookies.get("sessionID")?.value || ""
const headerCarouselOff = Astro.cookies.has(PUBLIC_FM_HEADER_CAROUSEL_OFF_COOKIE_KEY)

const resp = await fetch(`${ FM_CLIENT_WEBSHOP_API_URL }/webshop/static-text/promotions`,{
    headers:httpRequestHeader(true,'SSR',true,initialSessionID,Astro.clientAddress,!headerCarouselOff)
})

if (!resp.ok) return new Response(null,{status:500})

const json = await resp.json()
const {mdwResponse,apiResponse:{text}} = json as {mdwResponse: IMdwResponse; apiResponse:{text}}
const {
    expiresAt,
    sessionID,
    signedIn,
    cartProductDetailsMap,
    cartItemMap,
    cartContent,
    paymentInProcess,
    selCollectionPoint,
    prfCollectionPoint,
    shopAddressMap,
    minSpendForFreeShipping,
    firstName,
    headerCarouselTexts,
} = mdwResponse

Astro.cookies.set('sessionID',sessionID,sessionCookieOption(isOnline,expiresAt))

const shoppingBagProp:IShoppingBagSidebarProp = {
    isSignedIn:signedIn,
    cartContent,
    freeShippingLimit:minSpendForFreeShipping,
    cartItemMap,
    productDetailsMap:cartProductDetailsMap
}

Astro.cookies.set("csrf_token",resp.headers.get("X-CSRF-TOKEN"),sessionCookieOption(isOnline))
---

<Layout {...{
    shoppingBagProp,
    paymentInProcess,
    selCollectionPoint,
    prfCollectionPoint,
    shopAddressMap,
    signedIn,
    firstName,
    title:'Promotion',
    headerCarouselTexts,
}}>
    <Promotion {...{text}} />
</Layout>