---
import Layout from '../components/layout/index.astro';
import { httpRequestHeader, httpToHttps, sessionCookieOption, type IMdwResponse, type IShoppingBagSidebarProp } from '@misc';
import { FM_CLIENT_WEBSHOP_API_URL } from 'astro:env/server'
import { FM_IS_ONLINE, PUBLIC_FM_HEADER_CAROUSEL_OFF_COOKIE_KEY, PUBLIC_FM_COMPANY_NAME_SHORT, PUBLIC_FM_COMPANY_NAME_FULL } from 'astro:env/client'
import Homepage from '@components/homepage/index.astro'
import type { IProduct } from '@components/catalogue-item/interfaces';

interface IApiResponse {
    productIDs:string[];
    productMap:{[k:string]:IProduct};
}

const isOnline = FM_IS_ONLINE === 'true'
const initialSessionID = Astro.cookies.get("sessionID")?.value || ""
const headerCarouselOff = Astro.cookies.has(PUBLIC_FM_HEADER_CAROUSEL_OFF_COOKIE_KEY)

const resp = await fetch(`${ FM_CLIENT_WEBSHOP_API_URL }/webshop/index-page-init`,{
    headers:httpRequestHeader(true,'SSR',true,initialSessionID,Astro.clientAddress,!headerCarouselOff)
})

if (!resp.ok) return new Response(null,{status:500})

const json = await resp.json()
let {
    mdwResponse:{
        expiresAt,
        sessionID,
        signedIn,
        cartProductDetailsMap,
        cartItemMap,
        cartContent,
        paymentInProcess,
        selCollectionPoint,
        prfCollectionPoint,
        shopAddressMap,
        minSpendForFreeShipping,
        firstName,
        headerCarouselTexts,
        collectionMenuMap,
    },
    apiResponse:{
        productIDs,
        productMap,
    }
} = json as {
    mdwResponse:IMdwResponse;
    apiResponse:IApiResponse;
}

productMap = {...productMap,...cartProductDetailsMap}

Astro.cookies.set('sessionID',sessionID,sessionCookieOption(isOnline,expiresAt))

const shoppingBagProp:IShoppingBagSidebarProp = {
    isSignedIn:signedIn,
    cartContent,
    freeShippingLimit:minSpendForFreeShipping,
    cartItemMap,
    productDetailsMap:cartProductDetailsMap
}

Astro.cookies.set("csrf_token",resp.headers.get("X-CSRF-TOKEN"),sessionCookieOption(isOnline))

const origin = httpToHttps(Astro.url.origin)

const organizationalSchema = {
  "@context": "https://schema.org",
  "@graph":[
    {
        "@context" : "https://schema.org",
        "@type" : "WebSite",
        "name" : PUBLIC_FM_COMPANY_NAME_SHORT,
        "url" : origin
    },{
        "@type": "OnlineStore",
        "name": PUBLIC_FM_COMPANY_NAME_SHORT,
        "legalName":PUBLIC_FM_COMPANY_NAME_FULL,
        "url": origin,
        "logo": `${origin}/logo.jpg`,
        "description":"Based in Edinburgh, we offer beautiful, distinctive fashion jewellery at affordable prices.",
        "contactPoint": {
            "@type": "ContactPoint",
            "contactType": "Customer Service",
            "url": `${origin}/contact`, 
            "availableLanguage": ["English"]
        },
        "sameAs": [
            "https://pinterest.com/fairymade_edi/"
        ]
    }
  ]
}

---

<Layout {...{
    shoppingBagProp,
    paymentInProcess,
    selCollectionPoint,
    prfCollectionPoint,
    shopAddressMap,
    signedIn,
    firstName,
    title:`${PUBLIC_FM_COMPANY_NAME_SHORT} | Affordable Fashion Jewellery UK | Buy 3 For £25`,
    headerCarouselTexts,
    metaDescription:"Discover beautiful, distinctive fashion jewellery at affordable prices. Buy 3 for £25 & free UK delivery over £25. Explore our unique collection today!",
    preloadImageFilename:'banner-2000x673',
    preloadImageExt:'.jpg',
    schema:JSON.stringify(organizationalSchema),
    collectionMenuMap,
}}>
    <Homepage productIDs={productIDs || []} productObj={productMap} cartItemObj={cartItemMap}  />
</Layout>