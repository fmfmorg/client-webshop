---
import Layout from '@components/layout/index.astro';
import { httpRequestHeader, sessionCookieOption, type IMdwResponse, type IShoppingBagSidebarProp } from '@misc';
import { FM_CLIENT_WEBSHOP_API_URL, FM_ENV_MODE } from 'astro:env/server'
import { headerCarouselOffKey } from '@misc'
import ContactForm from '@components/contact/index.astro'

const isProduction = FM_ENV_MODE === 'production'
const initialSessionID = Astro.cookies.get("sessionID")?.value || ""
const headerCarouselOff = Astro.cookies.has(headerCarouselOffKey)

const resp = await fetch(`${ FM_CLIENT_WEBSHOP_API_URL }/webshop/index-page-init`,{
    headers:httpRequestHeader(true,'SSR',true,initialSessionID,Astro.clientAddress,!headerCarouselOff)
})

if (!resp.ok) return Astro.redirect('/maintenance')

const json = await resp.json()
const {mdwResponse} = json as {mdwResponse: IMdwResponse}
const {
    expiresAt,
    sessionID,
    signedIn,
    cartProductDetailsMap,
    cartItemMap,
    cartContent,
    paymentInProcess,
    selCollectionPoint,
    prfCollectionPoint,
    shopAddressMap,
    minSpendForFreeShipping,
    firstName,
    headerCarouselTexts,
} = mdwResponse

Astro.cookies.set('sessionID',sessionID,sessionCookieOption(isProduction,expiresAt))

const shoppingBagProp:IShoppingBagSidebarProp = {
    isSignedIn:signedIn,
    cartContent,
    freeShippingLimit:minSpendForFreeShipping,
    cartItemMap,
    productDetailsMap:cartProductDetailsMap
}

Astro.cookies.set("csrf_token",resp.headers.get("X-CSRF-TOKEN"),sessionCookieOption(isProduction))
---

<Layout {...{
    shoppingBagProp,
    paymentInProcess,
    selCollectionPoint,
    prfCollectionPoint,
    shopAddressMap,
    signedIn,
    firstName,
    title:'Contact Us',
    headerCarouselTexts,
}}>
    <ContactForm />
</Layout>