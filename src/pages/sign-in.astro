---
import { httpRequestHeader, sessionCookieOption, whiteBtnClass, type IMdwResponse, type IShoppingBagSidebarProp } from '@misc';
import Layout from '../components/layout/index.astro';
import SignInForm from '../components/sign-in-form/index.astro';
import { FM_IS_ONLINE } from 'astro:env/server'
import { PUBLIC_FM_HEADER_CAROUSEL_OFF_COOKIE_KEY, PUBLIC_FM_ACCEPT_MEMBERSHIP, FM_CLIENT_WEBSHOP_API_URL } from 'astro:env/client'

const acceptMembership = PUBLIC_FM_ACCEPT_MEMBERSHIP === 'true'

if (!acceptMembership) return new Response(null,{status:404})

const isOnline = FM_IS_ONLINE === 'true'
const initialSessionID = Astro.cookies.get("sessionID")?.value || ""
const headerCarouselOff = Astro.cookies.has(PUBLIC_FM_HEADER_CAROUSEL_OFF_COOKIE_KEY)

const resp = await fetch(`${ FM_CLIENT_WEBSHOP_API_URL }/webshop/sign-in-page-init`,{
    headers:httpRequestHeader(true,'SSR',true,initialSessionID,Astro.clientAddress,!headerCarouselOff)
})
if (!resp.ok) return new Response(null,{status:500})

const json = await resp.json()
const {mdwResponse} = json as {mdwResponse: IMdwResponse}
const {
    expiresAt,
    sessionID,
    signedIn,
    cartProductDetailsMap,
    cartItemMap,
    cartContent,
    paymentInProcess,
    selCollectionPoint,
    prfCollectionPoint,
    shopAddressMap,
    minSpendForFreeShipping,
    firstName,
    headerCarouselTexts,
} = mdwResponse

if ( signedIn ) return Astro.redirect('/')
else Astro.cookies.set('sessionID',sessionID,sessionCookieOption(isOnline,expiresAt))

const shoppingBagProp:IShoppingBagSidebarProp = {
    isSignedIn:signedIn,
    cartContent,
    freeShippingLimit:minSpendForFreeShipping,
    cartItemMap,
    productDetailsMap:cartProductDetailsMap
}

Astro.cookies.set("csrf_token",resp.headers.get("X-CSRF-TOKEN"),sessionCookieOption(isOnline))
---

<Layout {...{
    shoppingBagProp,
    paymentInProcess,
    selCollectionPoint,
    prfCollectionPoint,
    shopAddressMap,
    signedIn,
    showUserIcon:false,
    firstName,
    title:'Sign In',
    headerCarouselTexts,
}}>
    <div class="flex justify-center">
        <div class="divide-y p-8 space-y-8 max-w-md lg:grid lg:grid-cols-2 lg:divide-y-0 lg:divide-x lg:max-w-screen-lg lg:pb-10">
            <div class="lg:pr-8">
                <SignInForm />
            </div>
            <div class="divide-y space-y-8 lg:pl-8">
                <div class="pt-6">
                    <p class="text-center uppercase text-[0.8rem] tracking-widest">Not yet a member?</p>
                    <a href="/sign-up" class={whiteBtnClass}>Sign Up</a>
                </div>
                <div class="pt-4">
                    <a href="/track-order" class={whiteBtnClass}>Track Order</a>
                </div>
            </div>
        </div>
    </div>
</Layout>